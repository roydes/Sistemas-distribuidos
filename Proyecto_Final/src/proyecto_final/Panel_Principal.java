/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_final;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;
import proyecto_final.Modulo_MBCP.MBCP;
import proyecto_final.Modulo_MBCP.Mensaje_MBCP;
import proyecto_final.Modulo_MBCP.Tupla;

/**
 *
 * @author ROY
 */
public class Panel_Principal extends javax.swing.JPanel {

    /**
     * Creates new form Panel_Principal
     * @param fl
     */
    private MBCP mbcp;
    private ArrayList<String> mensajes_a_enviar;
    private ArrayList<Mensaje_MBCP> mensajes_enviados;
    private ArrayList<Tupla> procesos;
    private String Consola;
    private boolean hay_envio;
    private Thread hilo_recibo;

    public Panel_Principal( FlowLayout fl, MBCP mbcp, ArrayList<Tupla> procesos) {
        
       super(fl);
        initComponents();
        this.setBackground(Color.decode("#f1f1f1"));
        this.mbcp=mbcp;
        mensajes_a_enviar= new ArrayList<>();
        mensajes_enviados= new ArrayList<>();
        this.procesos= procesos;
        Consola="";
        hay_envio=false;
        Proceso_label.setText("Proceso "+mbcp.getJ());
        Actualzar_UI();
        actualizar_Lista_procesos(lista_procesos, procesos);
        asignar_modelo(lista_mensajes_enviar, mensajes_a_enviar);
        asignar_modelo(lista_mensajes_enviados, mensajes_enviados);
        asignar_modelo(Lista_mensajes_entregados, this.mbcp.getMensajes_entregados());
        asignar_modelo(Lista_mensajes_espera, this.mbcp.getMensajes_en_espera());
        
       //terminar_hilos();
        
       
     //RecibirActionPerformed(new ActionEvent(this,0,""));                                  

        
        
    }
    public void terminar_hilos(){
       

Set<Thread> hilos = Thread.getAllStackTraces().keySet();
        for(Thread thread : hilos){
    if(thread.getName()=="hilo_recibo"){
        thread.interrupt();
    }
}
   
    }

    public MBCP getMbcp() {
        return mbcp;
    }

    public void setMbcp(MBCP mbcp) {
        this.mbcp = mbcp;
    }

    public ArrayList<Tupla> getProcesos() {
        return procesos;
    }

    public void setProcesos(ArrayList<Tupla> procesos) {
        this.procesos = procesos;
    }
    
   private void Actualzar_UI(){
   
   VT_label.setText(mbcp.getVT_String());
   CI_label.setText(mbcp.getCI_String());
   
   
   }
       private void asignar_modelo(JList lista,ArrayList arrayList ){
    lista.setModel(new javax.swing.AbstractListModel<String>() {
            @Override
            public int getSize() { return  arrayList.size(); }
            @Override
            public String getElementAt(int i) { return arrayList.get(i).toString(); }
        });
    
    
    }
 private void actualizar_Lista_procesos(JList lista,ArrayList arrayList ){
    lista.setModel(new javax.swing.AbstractListModel<String>() {
            @Override
            public int getSize() { return  arrayList.size(); }
            @Override
            public String getElementAt(int i) { return "P"+((Tupla)arrayList.get(i)).getI()+": "+((Tupla)arrayList.get(i)).getD(); }
        });
    
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Consola_envios = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista_mensajes_enviados = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lista_procesos = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        Enviar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista_mensajes_enviar = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        Renviar = new javax.swing.JButton();
        nombre_mensaje_TxF = new proyecto_final.Utiles.PlaceHoldered_TextField();
        Datos_mensaje_TxF = new proyecto_final.Utiles.PlaceHoldered_TextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        Consola_recibos = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Lista_mensajes_entregados = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Lista_mensajes_espera = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        Recibir = new javax.swing.JButton();
        Proceso_label = new javax.swing.JLabel();
        VT_label = new javax.swing.JLabel();
        CI_label = new javax.swing.JLabel();

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(37, 138, 222), null, null));

        Consola_envios.setColumns(20);
        Consola_envios.setRows(5);
        jScrollPane5.setViewportView(Consola_envios);

        jLabel5.setText("Consola de envios");

        jScrollPane1.setViewportView(lista_mensajes_enviados);

        jLabel1.setText("Mensajes a enviar");

        lista_procesos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lista_procesosKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(lista_procesos);

        jLabel4.setText("Procesos del grupo");

        Enviar.setText("Enviar");
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });

        lista_mensajes_enviar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lista_mensajes_enviarKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(lista_mensajes_enviar);

        jLabel2.setText("Mensajes enviados");

        Renviar.setText("Renviar");
        Renviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RenviarActionPerformed(evt);
            }
        });

        nombre_mensaje_TxF.setPhColor(new java.awt.Color(102, 102, 102));
        nombre_mensaje_TxF.setPlaceholder("Mensaje");
        nombre_mensaje_TxF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombre_mensaje_TxFActionPerformed(evt);
            }
        });
        nombre_mensaje_TxF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombre_mensaje_TxFKeyPressed(evt);
            }
        });

        Datos_mensaje_TxF.setPhColor(new java.awt.Color(102, 102, 102));
        Datos_mensaje_TxF.setPlaceholder("Datos");
        Datos_mensaje_TxF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Datos_mensaje_TxFActionPerformed(evt);
            }
        });
        Datos_mensaje_TxF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Datos_mensaje_TxFKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(nombre_mensaje_TxF, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Datos_mensaje_TxF, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Renviar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(44, 44, 44))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(44, 44, 44)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre_mensaje_TxF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Datos_mensaje_TxF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(Enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Renviar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(379, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Proceso de Envío", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(37, 138, 222), null, null));

        Consola_recibos.setColumns(20);
        Consola_recibos.setRows(5);
        jScrollPane6.setViewportView(Consola_recibos);

        jLabel6.setText("Consola de recepción");

        jScrollPane3.setViewportView(Lista_mensajes_entregados);

        jLabel3.setText("Mensajes entregados");

        jScrollPane7.setViewportView(Lista_mensajes_espera);

        jLabel7.setText("Mensajes en espera");

        Recibir.setText("Recibir");
        Recibir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecibirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Recibir, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                        .addGap(80, 80, 80))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Recibir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Proceso de Recepción", jPanel2);

        Proceso_label.setText("Proceso:");

        VT_label.setText("VT");

        CI_label.setText("CI");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Proceso_label)
                .addGap(62, 62, 62)
                .addComponent(VT_label, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(CI_label, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Proceso_label)
                    .addComponent(VT_label)
                    .addComponent(CI_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed
       if(hilo_recibo!=null)
        hilo_recibo.stop();
        
        
        int index_Mensaje=lista_mensajes_enviar.getSelectedIndex();
        String[] s=mensajes_a_enviar.get(index_Mensaje).split(" : ");
        String nombre_mensaje=s[0];
        String datos_mensaje=s[1];
        
        int[] indexs=lista_procesos.getSelectedIndices();
        ArrayList<Tupla> hosts= new ArrayList<>();
        for (int i = 0; i < indexs.length; i++) {
            int index = indexs[i];
            Tupla host= this.procesos.get(index);
          hosts.add(host);
          
        }
        
        Mensaje_MBCP M=  this.mbcp.enviar(datos_mensaje, nombre_mensaje, Mensaje_MBCP.Tipos_mensaje.TEXTO);
        this.Consola_envios.setText(this.Consola_envios.getText()+this.mbcp.getLog());
        mensajes_enviados.add(M);
        Actualzar_UI();
        asignar_modelo(lista_mensajes_enviados, mensajes_enviados);
        
        RecibirActionPerformed(evt);
    }//GEN-LAST:event_EnviarActionPerformed

    private void RenviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RenviarActionPerformed
        if(hilo_recibo!=null)
        hilo_recibo.stop();
        
        int index_Mensaje=lista_mensajes_enviados.getSelectedIndex();
        int[] indexs=lista_procesos.getSelectedIndices();
        ArrayList<Tupla> hosts= new ArrayList<>();
        for (int i = 0; i < indexs.length; i++) {
            int index = indexs[i];
            Tupla host= this.procesos.get(index);
          hosts.add(host);
          
        }
        Mensaje_MBCP M=mensajes_enviados.get(index_Mensaje);
       this.mbcp.renviar(M,hosts);
       this.Consola_envios.setText(this.Consola_envios.getText()+this.mbcp.getLog());
       
          RecibirActionPerformed(evt);
        
    }//GEN-LAST:event_RenviarActionPerformed

    private void nombre_mensaje_TxFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombre_mensaje_TxFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombre_mensaje_TxFActionPerformed

    private void Datos_mensaje_TxFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Datos_mensaje_TxFActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Datos_mensaje_TxFActionPerformed

    private void Datos_mensaje_TxFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Datos_mensaje_TxFKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            {
                mensajes_a_enviar.add(nombre_mensaje_TxF.getText()+" : '"+Datos_mensaje_TxF.getText()+"'");
                asignar_modelo(lista_mensajes_enviar, mensajes_a_enviar);
                nombre_mensaje_TxF.setText(null);
                Datos_mensaje_TxF.setText(null);
            }
        
    }//GEN-LAST:event_Datos_mensaje_TxFKeyPressed

    private void nombre_mensaje_TxFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombre_mensaje_TxFKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            {
                mensajes_a_enviar.add(nombre_mensaje_TxF.getText()+" : '"+Datos_mensaje_TxF.getText()+"'");
                asignar_modelo(lista_mensajes_enviar, mensajes_a_enviar);
                nombre_mensaje_TxF.setText(null);
                Datos_mensaje_TxF.setText(null);
            }
    }//GEN-LAST:event_nombre_mensaje_TxFKeyPressed

    private void lista_mensajes_enviarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lista_mensajes_enviarKeyPressed
       
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
    {  
        // int[] indexs=lista_procesos.getSelectedIndices();
        int[] indexs=lista_mensajes_enviar.getSelectedIndices();
        
        for (int i = 0; i < indexs.length; i++) {
            int index = indexs[i];
          mensajes_a_enviar.remove(index);
             }
        asignar_modelo(lista_mensajes_enviar, mensajes_a_enviar);
    }

    }//GEN-LAST:event_lista_mensajes_enviarKeyPressed

    private void lista_procesosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lista_procesosKeyPressed
        
               
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
    {  
        // int[] indexs=lista_procesos.getSelectedIndices();
        int[] indexs=lista_procesos.getSelectedIndices();
        
        for (int i = 0; i < indexs.length; i++) {
            int index = indexs[i];
          procesos.remove(index);
             }
        asignar_modelo(lista_procesos, procesos);
    }
    }//GEN-LAST:event_lista_procesosKeyPressed

    private void RecibirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecibirActionPerformed
     // 
    if(""==Consola_recibos.getText()) 
    Consola_recibos.setText("Proceso en espera de mensajes....");
     hilo_recibo= new Thread(){ 
    public void run() {
        
        recepcionar();
    }};
     hilo_recibo.setName("hilo_recibo");
      hilo_recibo.start();
    }//GEN-LAST:event_RecibirActionPerformed
private void recepcionar(){
    while(true){
        try {
            System.out.println(this.mbcp.getVT());
            this.mbcp.recepcion();
        } catch (IOException ex) {
            Logger.getLogger(Panel_Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.Consola_recibos.setText(this.Consola_recibos.getText()+"\n"+this.mbcp.getLog());
        asignar_modelo(Lista_mensajes_entregados, this.mbcp.getMensajes_entregados());
        asignar_modelo(Lista_mensajes_espera, this.mbcp.getMensajes_en_espera());
        this.VT_label.setText(this.mbcp.getVT_String());
        this.CI_label.setText(this.mbcp.getCI_String());
   //     }
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CI_label;
    private javax.swing.JTextArea Consola_envios;
    private javax.swing.JTextArea Consola_recibos;
    private proyecto_final.Utiles.PlaceHoldered_TextField Datos_mensaje_TxF;
    private javax.swing.JButton Enviar;
    private javax.swing.JList<String> Lista_mensajes_entregados;
    private javax.swing.JList<String> Lista_mensajes_espera;
    private javax.swing.JLabel Proceso_label;
    private javax.swing.JButton Recibir;
    private javax.swing.JButton Renviar;
    private javax.swing.JLabel VT_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> lista_mensajes_enviados;
    private javax.swing.JList<String> lista_mensajes_enviar;
    private javax.swing.JList<String> lista_procesos;
    private proyecto_final.Utiles.PlaceHoldered_TextField nombre_mensaje_TxF;
    // End of variables declaration//GEN-END:variables
}
